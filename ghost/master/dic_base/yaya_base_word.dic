// ******************************************************************************
// YAYA　ゴーストテンプレート
// 単語辞書
// ******************************************************************************

// ===================================================================
// 食事
// ===================================================================
me
{
    Meal_name_random
    Word_snack
}

Word_meal_staple : array
{
    '御飯|235|ja'
    'トースト|239|eu'
}
Word_meal_maindish : array
{
    'カレー南蛮うどん|516|ja'
    'オムライス|784|eu'
    'ポークカレー|761|eu'
    '親子丼|569|ja'
    '天丼|800|ja'
    'カルボナーラ|820|eu'
    'ドリア|810|eu'
}

Word_meal_sidedish : array
{
    '里芋とにんじんの煮物|130|ja'
    '肉じゃが|528|ja'
    '卵焼き|90|ja'
    'ラタトゥイユ|240|eu'
    '白身魚のカルパッチョ|220|eu'
}

Word_meal_light : array
{
    '高菜と明太子のお握り|179|ja'
    'ピーナッツバターサンド|180|eu'
    'カツサンド|154|eu'
    '焼きおにぎり|180|ja'
    '鮭茶漬け|280|ja'
}

Word_meal_soup : array
{
    'お味噌汁|58|ja'
    'コーンポタージュ|172|eu'
    '野菜コンソメスープ|90|eu'
}

Word_meal_sweets : array
{
    'ティラミス|250|eu'
    'モンブラン|364|eu'
    'ホットケーキ|564|eu'
    '羊羹|148|ja'
    'どらやき|165|ja'
}

Meal_genre
{
    case _argv[0] {
    when 'eu' {
        '洋風'
        return
    }
    when 'ja' {
        '和風'
        return
    }
    others {
        'よくわからない'
        return
    }
    }
}

Meal_array : array
{
    _class = SHIORI3FW.EscapeAllTags(_argv[0])
    if RE_MATCH(_class, '^Word_meal_.+') == 0 {
        _class = 'Word_meal_' + _class
    }
    _meal = ANY(EVAL(_class))
    _meal = SPLIT(_meal, '|')
    _meal
}

Meal_name_random
{
    _meal_f = GETFUNCLIST('Word_meal_')
    _meal = Meal_array(ANY(_meal_f))
    _meal[0]
}

Word_snack
{
    '固いコーラ・グミ'
    '一個が当たりというかハズレのガム'
    'その野菜の味がしないスナック'
    'ポテトチップスのりしお味'
    'ナッツ入りチョコレート'
    '野菜チップス'
    '黒糖麩菓子'
    'おつまみ用昆布'
    'かぼちゃの種'
    'かぼちゃプリン'
    '雪のようなアイスクリーム'
    Word_snack_energy
}
// 栄養食品
Word_snack_energy
{
    'メープル味の栄養スナック'
    '一本で満足しちゃうバー'
    '10秒で補給できるゼリー'
    '大豆なのでなんだかいい感じのスナック'
}

// ===================================================================
// 人名
// ===================================================================
ms
{
    Word_ghost_installed
    Word_person_rand_ja
}

Word_ghost_installed
{
    // _ary = (IARRAY, installedsakuralist)
    // _s = ASEARCH(sakuraname, _ary)
    // _ary[_s] = IARRAY

    // parallel _ary
    ANY(SHIORI3FW.SakuraNameList)
}

Word_person_rand_ja
{
    _f = Word_person_rand_ja_family
    _n = Word_person_rand_ja_first
    _f + _n
}
Word_person_rand_ja_family : nonoverlap
{
    '佐藤'
    '鈴木'
    '高橋'
    '田中'
    '渡辺'
    '伊藤'
    '小林'
    '加藤'
    '中村'
    '山本'
    '加藤'
    '吉田'
    '佐々木'
    '山口'
    '松本'
    '井上'
    '斎藤'
    '木村'
    '林'
    '清水'
    '山崎'
    '池田'
    '阿部'
    '森'
    '橋本'
    '山下'
    '石川'
    '中島'
    '前田'
    '藤田'
    '小川'

    '佐野'
}

Word_person_rand_ja_first : nonoverlap
{
    '伊織'
    '藤馬'
    'きぬ'

    '陽斗'
    '勇人'
    '裕樹'
    '颯太'
    '浩暉'
    '春樹'
    '悠太'
    '陸'
    '拓海'
    '海斗'
    '隼人'
    '空'
    '翔太'
    '康太'
    '亮太'
    '遊馬'
    '友哉'
    '龍生'
    '弘人'
    '公成'

    '遥香'
    '唯'
    '陽菜'
    'ほのか'
    '桃花'
    '奈々美'
    '綾香'
    '優奈'
    '榛名'
    'さくら'
    '美由'
    '葵'
    '美咲'
    '沙貴'
    '夕夏'
    '理緒'
    '真央'
    '花音'
    '日向'
    '未来'
}

// ===================================================================
// 無機物
// ===================================================================
mz
{
    Word_tool_IT
    Word_tool_stationery
    Word_tool_gardening
    'リモコン'
    '洗濯ばさみ'
    'デジカメ'
    'パスケース'
}
Word_tool_IT
{
    'スマートフォン'
    'パソコン'
    'キーボード'
}
Word_tool_stationery
{
    'シャープペンシル'
    '消しゴム'
    '手帳'
}

Word_tool_gardening
{
    'スコップ'
    'シャベル'
    '如雨露'
    '枝切り鋏'
}

// ===================================================================
// 集合
// ===================================================================
ml
{
    '人類'
    '世界'
    '生きとし生けるもの'
}
// ===================================================================
// 社名
// ===================================================================
mc
{
    '越後屋'
    'アンブレラ'
    '民明書房'
    'シルフカンパニー'
    'EVAC Industry'
    'サイバーダイン社'
    'ローゼン協会'
}

// ===================================================================
// 店名
// ===================================================================
mh
{
    'サトーココノカドー'
    'KEIBU'
    'ドクマナルド'
    'セボンイレボン'
}

// ===================================================================
// 技
// ===================================================================
mt
{
    'バックドロップ'
    'ジャーマンスープレックス'
    'ファイナル・イオリ・ライド'
    'きりもみキック'
    'ヤクザキック'
    '廻し蹴り'
    '天空落とし'
    'ツバメ返し'
    '追突零式'
}
// ===================================================================
// 地名
// ===================================================================
mp
{
    Word_place_ramen
    Word_place_country
}
// ラーメンが美味しい場所
Word_place_ramen
{
    '札幌'
    '旭川'
    '函館'
    '米沢'
    '白河'
    '佐野'
    '喜多方'
    '東京'
    '横浜'
    '高山'
    '京都'
    '和歌山'
    '尾道'
    '広島'
    '徳島'
    '博多'
    '久留米'
    '熊本'
    '鹿児島'

    // '飛騨高山'
    // '富山'
    // '和歌山'
    // '天理'
    // '岡山'
    // '敦賀'
    // '鳥取'
    // '別府'
    // '宮崎'
}
Word_place_country
{
    'アメリカ'
    'アイスランド'
    'ノルウェー'
    'フィンランド'
    // '日本'
}

dms
{
    '腹筋をしているライオン'
    'オレンジジュースを吐いているマーライオン'
    '犬に肩叩きしている猫'
    '逆上がりしているタコ'
    '空中で後方伸身2回宙返り3回ひねりを決めるタカ'
}

// ===================================================================
// 植物
// ===================================================================
Word_plant
{
    Word_plant_vegetable
    Word_plant_flower
    Word_plant_tree
}

// 野菜
Word_plant_vegetable
{
    'じゃがいも'
    'ミニトマト'
    '大葉'
    'ゴーヤ'
    'ほうれんそう'
    '小松菜'
}

Word_plant_flower
{
    'あじさい'
    '水仙'
    '鈴蘭'
    '鈴蘭水仙'
    'ひまわり'
    'チューリップ'
}

Word_plant_tree
{
    '藤'
    '桜'
    '梅'
    '椿'
    Word_plant_fruit
}

Word_plant_fruit
{
    '柿'
    '桃'
    '蜜柑'
    '栗'
    'ぶどう'
}

// ===================================================================
// 伺か関連
// ===================================================================
Word_uka_archive : nonoverlap
{
    "ゴースト"
    "シェル"
    "バルーン"
    "プラグイン"
    "ヘッドライン"
    "サプリメント"
}

// ******************************************************************************
// 単語取得イベント
// ******************************************************************************

On_\ms
{
    ms
}

On_\mz
{
    mz
}

On_\ml
{
    ml
}

On_\mc
{
    mc
}

On_\mh
{
    mh
}

On_\mt
{
    mt
}

On_\me
{
    me
}

On_\mp
{
    mp
}

On_\dms
{
    dms
}
